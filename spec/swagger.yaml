# This is an **example** API to demontstrate features of OpenAPI specification.
# It doesn't cover all OpenAPI features. For more full example check out: https://github.com/APIs-guru/petstore_extended
swagger: '2.0'
# You should specify common part of your endpoints in the following format:
#   <schemes>://<host><basepath>
schemes:
  - http # Remove if your API doesn't support HTTP
  - https # Remove if your API donsn't support HTTPS
host: payment.ducatus.io # Replace with your hostname. You can also specify port e.g. example.com:777
#basePath: /api/v0 # Replace with your basePath. Note: SHOULD begin with '/'.
basePath: / # Replace with your basePath. Note: SHOULD begin with '/'.
info:
  # Describe your API here, you can use GFM (https://guides.github.com/features/mastering-markdown) here
  description: |
    This is a RESTful DucatusCoin payment gateway that allows users to quickly and easily integrate DucatusCoin as a payment method. Currently the payment gateway accepts payment requests for DucatusCoin as well as Bitcoin.  
    
    # Introduction
    This specification is intended to describe the functionality and use of the payment gateway. The gateway provides an easy way to receive DucatusCoin as a payment method. There are no fees associated with this service, and no registration is needed. Simply create an API key and point the Instant Payment Notification (IPN) parameter to an endpoint of your choosing.
    
    # Instant Payment Notification
    When a payment is received by a payment request, a payment notification is sent to a URL that was set when generating the API key. The notification will be a POST containing all the pertinant information of a payment: 
    
    ```json
    {
      "id": "NWHruNZITo11Cjyz",
      "address": "Ln4E73gikptjT9cBDAQcXG29vVxH5TB9GM",
      "qr_data": "ducatuscoin:Ln4E73gikptjT9cBDAQcXG29vVxH5TB9GM?amount=4.601",
      "expected": "4.601",
      "balance": "4.601",
      "unconfirmed": "0",
      "expiresAt": 1515155937620,
      "api_data": {
        "api_key": "uNZINWHrTo11Cjyz",
        "ex_pub_key": "Ltub2ZpAmhCdTqeogbBEzzbnme3sixN8sTySiTnqVq1RGZGfCboegMY7mes1CYXgSpzAQTJC2haJ2YTiaQcJNueoP6jVLAPHJJJ82DxERWeFnc5",
        "crypto_symbol": "dtc",
        "ipn": "https://exmple.com/payment-notification-post-endpoint",
        "network": "livenet"
      }
    }
    ```
    
    This is described in more detail under the payment request, as the data received back from that API call is the same as the data that gets sent to the IPN.
    
    # Development Process and Contribution
    Changes in the specification are made in the upcoming version branch. A merge request is then placed to the development branch, where it get's approved. Once in the development branch, the changes are then implemented in the backend project, when fully implemented the API specification is moved to the master branch.
    
    # Testing
    This specification is tested through the use of [Dredd](http://dredd.readthedocs.io/en/latest) to ensure that documentation is up-to-date as well as [Artillery](https://artillery.io/) for load testing.

  version: '0.0.1' # Your API version
  # It can be any string but it is better to use semantic versioning: http://semver.org/
  # Warning: OpenAPI require version to be string, but without quotation YAML can recognize it as number.

  title: payment.ducatus.io DRAFT # Replace with your API title
  # Keep it simple. Don't add "API" or verison at the end of the string.

  contact:
    name: Ducatus Tech Support
    email: tech@ducatus.io # [Optional] Replace with your contact email
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://ducatus.github.io/ducatus-payment-api/DUCATUS%20MASTER_FULL%20COLOUR_TRANSPARENT_21NOV17_CoachBongster.png'

produces:
  # List of mime types your API endpoins can return.
  # This is a global default. You can OVERWRITE it in each specific operation.
  # Remove the ones not used in your API
  - application/json
  # you can add any mime type your API produces to the list
consumes:
  # List of mime types your API endpoins consumes.
  # This is a global default. You can OVERWRITE it in each specific operation.
  # Remove the ones not supported by your API
  - application/json
  # you can add any mime type your API consumes to the list

# Security scheme definitions that can be used across the specification.
securityDefinitions:
  basic_auth: # security definition name (you can name it as you want)
    type: basic
    description: Currently this gateway is not public nor live. Therefore, the gateway currently requires HTTP Basic Auth to access.

security:
  - basic_auth: []

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL. 
paths:
  /api_key:
    post:
      summary: Generate API key
      description: Returns an API key
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          description: Payment Request data
          required: true
          schema:
            type: object
            properties:
              ex_pub_key:
                type: string
                description: External Public Key of the wallet
                example: Ltub2ZpAmhCdTqeogbBEzzbnme3sixN8sTySiTnqVq1RGZGfCboegMY7mes1CYXgSpzAQTJC2haJ2YTiaQcJNueoP6jVLAPHJJJ82DxERWeFnc5
              ipn:
                type: string
                description: Instant payment URL that the payment gateway will send a post to
                example: https://exmple.com/payment-notification-post-endpoint
              crypto_symbol:
                type: string
                enum:
                  - btc
                  - dtc
                description: The ticker for the crypto, only BTC and DTC is supported (case insensitive)
                example: dtc
              network:
                type: string
                description: Testnet or Livenet
                enum:
                  - livenet
                  - testnet
                default: livenet
      responses:
        200:
          description: A User object
          schema:
            $ref: "#/definitions/ApiData"
  
  /request_payment/{id}:
    get:
      summary: Get info on a past payment request
      parameters:
        - name: id
          in: path
          description: The ID of that was returned for the payment request
          required: true
          type: string
          example: NWHruNZITo11Cjyz
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PaymentRequest"
            
  /request_payment:
    post:
      summary: Payment Request
      description: Create a new request for payment, returns data for payment request
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          description: Payment Request data
          required: true
          schema:
            type: object
            properties:
              expected:
                type: string
                description: Expected crypto amount to be paid
              api_key:
                type: string
                description: API key
                example: uNZINWHrTo11Cjyz
            
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PaymentRequest"

  

          
# complex objects have schema definitions
definitions:
  PaymentRequest:
    type: object
    properties:
      id:
        type: string
        description: ID of the transaction from the payment gateway, not blockchain ID
        example: NWHruNZITo11Cjyz
      address:
        type: string
        description: A unique crypto address
        example: Ln4E73gikptjT9cBDAQcXG29vVxH5TB9GM
      qr_data:
        type: string
        description: A URL to the QR code
        example: ducatuscoin:Ln4E73gikptjT9cBDAQcXG29vVxH5TB9GM?amount=4.601
      expected:
        type: string
        description: expected amount to be paid in the crypto (DTC or BTC)
        example: "4.601"
      balance:
        type: string
        description: Actual amount paid in BTC or DTC
        default: "0"
      unconfirmed:
        type: string
        description: Amount awaiting to be confirmed in the blockchain
        default: "0"
      expiresAt:
        type: number
        description: Time in epoch with miliseconds that the address will expire
        example: 1515155937620
      api_data:
        $ref: "#/definitions/ApiData"
        
  ApiData:
    type: object
    properties:
      api_key:
        type: string
        description: An API key
        example: uNZINWHrTo11Cjyz
      ex_pub_key:
        type: string
        description: Extended public key
        example: Ltub2ZpAmhCdTqeogbBEzzbnme3sixN8sTySiTnqVq1RGZGfCboegMY7mes1CYXgSpzAQTJC2haJ2YTiaQcJNueoP6jVLAPHJJJ82DxERWeFnc5
      crypto_symbol:
        type: string
        enum:
          - btc
          - dtc
        example: dtc
        description: The ticker for the crypto, only BTC and DTC is supported (case insensitive)
      ipn:
        type: string
        description: An endpoint that can accept a POST with JSON data
        example: https://exmple.com/payment-notification-post-endpoint
      network:
        type: string
        description: Testnet or Livenet
        enum:
          - livenet
          - testnet
        default: livenet

